@using Lexicon_LMS.Models
@using Microsoft.AspNet.Identity

@model Lexicon_LMS.Models.Module

@{
    ViewBag.Title = "ListActivity";
}

<h2></h2>
<div class="activity-table">
@if (User.IsInRole(Role.Teacher))
{
    @Html.ActionLink("Add new activity", "CreateActivity", "Home", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm newActivityBtn" })
}

<table class="table table-responsive dl-horizontal table-striped table-bordered">
    <tr>
        
        <th>
          Name
        </th>
        <th>
           Description
        </th>
        <th>
           Start Date
        </th>
        <th>
            End Date
        </th>
        <th>
          ActivityType
        </th>
        <th>
            [Placeholder column name]
        </th>

    </tr>

@foreach (var item in Model.Activity) {
   
    <tr class="user-tr">
      
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActivityType.Name)
            @if (User.IsInRole(Role.Teacher))
            {
                <span class="right">|<a href="#" class="js-delete-entity glyphicon glyphicon-trash btn-gly-trash-act" data-user-api="/HomeApi/DeleteActivity/" data-user-id="@item.Id" data-user-remove=".user-tr" data-user-message="Delete activity @Html.DisplayFor(modelItem => item.Name)"></a></span>
                <span class="right">@Ajax.ActionLink(" ", "EditActivity", "Home", new { id = item.Id }, new AjaxOptions
                               {
                                   UpdateTargetId = "UpdateContentDiv", // <-- DOM element ID to update
                                   InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                                   HttpMethod = "GET", // <-- HTTP method


                               },
                                   new { @class = "glyphicon glyphicon-edit btn-gly" })</span>

            }

        </td>
        <td>
            @if (item.ActivityType.AllowStudentDocuments && User.IsInRole(Role.Student))
            {
                var document = item.Documents.FirstOrDefault(x => x.Author.Id == User.Identity.GetUserId());
                if (document == null)
                {
                <p>@Html.ActionLink("upload assignment", "AddFileToSystem", "Document", routeValues: new { activityId = item.Id }, htmlAttributes: new { @class = "btn btn-default btn-xs" })</p>
                }
                else
                {
                    <p>submitted: <a href="@Url.Action("GetFile","Document", new { id = document.Id })" download="@document.FileName"><span class="glyphicon glyphicon-file"></span>@document.FileName</a></p>
                }

            }
            @if (User.IsInRole(Role.Teacher))
            {
                @Html.ActionLink("add document", "AddFileToSystem", "Document", routeValues: new { activityId = item.Id }, htmlAttributes: new { @class = "btn btn-default btn-xs" })
            }
        </td>

   
    </tr>
}

</table>
</div>
