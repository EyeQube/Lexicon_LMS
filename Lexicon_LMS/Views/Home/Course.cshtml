@using Lexicon_LMS.Models
@using Microsoft.AspNet.Identity

@model Lexicon_LMS.Models.Course

@{
    ViewBag.Title = "Course";

    
}

<div class="user-course">

<h2 style="color:darkred;"><b>@Model.Name</b></h2>
<div>
    
     @* @Html.ActionLink("Schedule", "Index" ,"BasicScheduler", routeValues: new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" }) *@

</div>

    @Html.ActionLink("Schedule", "Index", "BasicScheduler", routeValues: new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" })

    @if (User.IsInRole(Role.Teacher))
    {
        @Html.ActionLink("Edit Course", "EditCourse", "Home", routeValues: new { role = Role.Teacher, id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
        <a href="#" class="js-delete-entity btn btn-default btn-sm" title="Delete" data-user-api="/HomeApi/DeleteCourse/" data-user-id="@Model.Id" data-user-remove=".user-course" data-user-message="Delete course @Html.DisplayFor(m => m.Name)">Delete course</a>
        @Ajax.ActionLink("Add document", "AddFileToSystem", "Document", new { courseId = Model.Id, ispartial = true }, new AjaxOptions
   {
       UpdateTargetId = "UpdateContentDiv", // <-- DOM element ID to update
       InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
       HttpMethod = "GET", // <-- HTTP method


   },
                                                            new { @class = "btn btn-default btn-sm" } //-- Class
                                                        )

    }
    <a href="#" class="btn btn-default btn-sm" data-toggle="collapse" data-target=".Description">Course info</a>


    <hr />
    <div class="col-sm-12">
        <div id="UpdateContentDiv1">


        </div>
        <div class="Description collapse in">
            @*<h4>@Html.DisplayFor(model => model.Name)</h4>*@

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd style="color:darkred;">
                    <b>@Html.DisplayFor(model => model.Name)</b>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.StartDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.StartDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EndDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EndDate)
                </dd>

                @*@if (Model.Documents.Count > 0)
                    {
                        <dt>
                            Documents
                        </dt>
                    }*@

                <dt>
                    Documents
                </dt>

                <dd>
                    @foreach (var file in Model.Documents)
            {
                        <span class="space">
                            <a href="@Url.Action("GetFile", "Document", new { id = file.Id })" download="@file.FileName"
                               title="created @file.CreateTime.ToString() by @file.Author.FullName">@file.FileName</a>
                        </span>
                    }
                </dd>

                @*<h4>Documents: </h4>
                    <div class="row">
                        @foreach (var file in Model.Documents)
                    {
                            <div class="col-sm-3">
                                <a href="@Url.Action("GetFile","Document", new { moduleId = file.Id })" download="@file.FileName"><span class="glyphicon glyphicon-file"></span>@file.FileName</a>
                            </div>
                        }
                    </div>*@





            </dl>

            <hr />

        </div>
    </div>



    <div class="col-sm-3">
        <div class="row">
            <h3 style="color:darkred;"><b>Course modules</b></h3>

            @if (User.IsInRole(Role.Teacher))
            {
                @Html.ActionLink("Add new module", "CreateModule", "Home", routeValues: new { courseId = Model.Id, returnUrl = Request.RawUrl }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
                <hr />
            }

            @foreach (var module in Model.Modules.OrderBy(x => x.StartDate))
            {
                <div class="user-module">
                    <p>
                        @Ajax.ActionLink(module.Name, "ListActivity", "Home", new { id = module.Id }, new AjaxOptions { UpdateTargetId = "UpdateContentDiv", InsertionMode = InsertionMode.Replace, HttpMethod = "GET" }, new { @class = "btn btn-link module-link" })

                        @if (User.IsInRole(Role.Teacher))
                {
                            <span class="pull-right">
                                @Ajax.ActionLink(" ", "EditModule", "Home", new { id = module.Id }, new AjaxOptions { UpdateTargetId = "UpdateContentDiv", InsertionMode = InsertionMode.Replace, HttpMethod = "GET" }, new { @class = "glyphicon glyphicon-edit btn-gly1", title = "Edit" })
                                |
                                <a href="#" class="js-delete-entity glyphicon glyphicon-trash btn-gly1" title="Delete" data-user-api="/HomeApi/DeleteModule/" data-user-id="@module.Id" data-user-removeAjax="#UpdateContentDiv" data-user-remove=".user-module" data-user-message="Delete module @Html.DisplayFor(m => module.Name)"></a>
                            </span>
                        }

                    </p>
                    <p><i> @Html.DisplayFor(m => module.StartDate) &ndash; @Html.DisplayFor(m => module.EndDate)</i></p>
                    <p><b>@module.Description</b></p>
                </div>
            }
            @if (!Model.Modules.Any())
            {
                <p>No modules registered</p>
            }

        </div>
    </div>
    <div class="col-sm-9">

        <div id="UpdateContentDiv">
            @*Render module data here*@
            @if (ViewBag.ModuleId != null)
            {
                Html.RenderAction("ListActivity", routeValues: new { id = ViewBag.ModuleId });
            }
        </div>
    </div>

    <hr />

    <div class="col-sm-12">
        <div class="row">
            <hr />
            <strong><a href="#" class="btn btn-link headling-users" data-toggle="collapse" data-target=".users">Course student</a></strong><br />
            @if (User.IsInRole(Role.Teacher))
            {
                @Html.ActionLink("Add new student", "Register", "Account", routeValues: new { role = Role.Student, courseid = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm btn-side" })
            }
            <div class="users collapse in">
                @foreach (var student in Model.Users.ToList())
                {
                    <div class="col-sm-4 col-md-4">
                        <p><strong>@student.FullName</strong> <a href="mailto:@student.Email">@student.Email</a></p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


