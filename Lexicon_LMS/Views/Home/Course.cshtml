@using Lexicon_LMS.Models
@using Microsoft.AspNet.Identity

@model Lexicon_LMS.Models.Course

@{
    ViewBag.Title = "Course";

    ViewBag.CourseId = Model.Id;
}


<h2 style="color:darkred;"><b>@Model.Name</b></h2>  
@Html.ActionLink("Delete Course", "DeleteCourse", "Home", routeValues: new {returnUrl = Request.RawUrl, Role = Role.Teacher, id = Model.Id }, htmlAttributes: new { @class = "btn btn-primary" })

<div>
    @*<h4>@Html.DisplayFor(model => model.Name)</h4>*@
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd style="color:darkred;">
            <b>@Html.DisplayFor(model => model.Name)</b>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

    </dl>
</div>

<hr />
<div class="container">
    <div class="col-lg-4">
        <div class="row">
            <h3 style="color:darkred;"><b>Course modules</b></h3>

            @if (User.IsInRole(Role.Teacher))
            {
                @Html.ActionLink("Add new module", "CreateModule", "Home", routeValues: new { courseId = Model.Id, returnUrl = Request.RawUrl }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
            }

            @foreach (var module in Model.Modules.OrderBy(x => x.StartDate))
            {
                <div class="user-module">
                    <h5>
                        <strong>
                            @Ajax.ActionLink(module.Name, "ListActivity", "Home", new { id = module.Id }, new AjaxOptions
                       {
                           UpdateTargetId = "UpdateContentDiv", // <-- DOM element ID to update
                           InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                           HttpMethod = "GET", // <-- HTTP method


                       },
                            new { @class = "btn btn-link" } //-- Class
                        )


                        </strong> ( @Html.DisplayFor(m => module.StartDate) - @Html.DisplayFor(m => module.EndDate) )
                    </h5>
                    <p>@module.Description</p>

                    @if (User.IsInRole(Role.Teacher))
                    {
                    <div>
                        @Html.ActionLink("edit", "EditModule", "Home", routeValues: new { id = module.Id, returnUrl = Request.RawUrl }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
                        <a href="#" class="js-delete-entity btn btn-danger btn-sm" data-user-api="/HomeApi/DeleteModule/" data-user-id="@module.Id" data-user-remove=".user-module" data-user-message="Delete module @Html.DisplayFor(m => module.Name)">DELETE</a>
                    </div>
                    }

                </div>
            }
            @if (!Model.Modules.Any())
            {
                <p>Inga moduler registrerade för denna kurs</p>
            }


        </div>
    </div>
    <div class="col-lg-8">

        <div id="UpdateContentDiv">

@Html.ActionLink("Add/Update Module", "Module", "Home", routeValues: new { role = Role.Teacher, id = Model.Id}, htmlAttributes: new { @class = "btn btn-primary" })

        </div>
    </div>

</div>
<hr />
<div class="container">
    <div class="col-md-6">
        <h3 style="color:darkred;"><b>Course members</b></h3>

        <div class="contaier-fluid">
            <div class="row">

                @foreach (var student in Model.Users.ToList())
                {
                    <div class="col-sm-6 col-md-4">
                        <p><strong>@student.FullName</strong> <a href="@student.Email">@student.Email</a></p>
                    </div>
                }
            </div>
        </div>

        <hr />
    </div>
</div>
<div class="container">
    @*@if (Request.IsAuthenticated && User.IsInRole(Role.Teacher))*@
    @if (User.IsInRole(Role.Teacher))
            {
        @Html.ActionLink("Add new student", "Register", "Account", routeValues: new { role = Role.Student, courseid = Model.Id }, htmlAttributes: new { @class = "btn btn-default" })
    }
</div>

