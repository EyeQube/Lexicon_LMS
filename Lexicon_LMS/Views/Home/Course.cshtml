@using Lexicon_LMS.Models
@using Microsoft.AspNet.Identity

@model Lexicon_LMS.Models.Course

@{
    ViewBag.Title = "Course";

    
}


<h2 style="color:darkred;"><b>@Model.Name</b></h2>
<div>@Html.ActionLink("Schedule", "Index" ,"BasicScheduler", routeValues: new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" })</div>

@if (User.IsInRole(Role.Teacher))
{
    @Html.ActionLink("Edit Course", "EditCourse", "Home", routeValues: new { role = Role.Teacher, id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
    @Html.ActionLink("Delete Course", "DeleteCourse", "Home", routeValues: new { Role = Role.Teacher, id = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
}

<div>
    @*<h4>@Html.DisplayFor(model => model.Name)</h4>*@
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd style="color:darkred;">
            <b>@Html.DisplayFor(model => model.Name)</b>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
       
            <dd>
                @Html.DisplayFor(model => model.StartDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.EndDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EndDate)
            </dd>

        </dl>
</div>

 

<div class="col-lg-3 ">
    <div class="row">
        <h3 style="color:darkred;"><b>Course modules</b></h3>

        @if (User.IsInRole(Role.Teacher))
            {
                @Html.ActionLink("Add new module", "CreateModule", "Home", routeValues: new { courseId = Model.Id, returnUrl = Request.RawUrl }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
            }

        @foreach (var module in Model.Modules.OrderBy(x => x.StartDate))
            {
            <div class="user-module">
                <h5>
                    <strong>
                        @Ajax.ActionLink(module.Name, "ListActivity", "Home", new { id = module.Id }, new AjaxOptions
                       {
                           UpdateTargetId = "UpdateContentDiv", // <-- DOM element ID to update
                           InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                           HttpMethod = "GET", // <-- HTTP method


                       },
                            new { @class = "btn btn-link" } //-- Class
                        )


                   </strong> 
                    @if (User.IsInRole(Role.Teacher))
                    {
                        <div>
                            (@Html.DisplayFor(m => module.StartDate) - @Html.DisplayFor(m => module.EndDate) )@Html.ActionLink(" ", "EditModule", "Home", routeValues: new { id = module.Id, returnUrl = Request.RawUrl }, htmlAttributes: new { @class = "glyphicon glyphicon-edit btn-gly" })|<a href="#" class="js-delete-entity glyphicon glyphicon-trash btn-gly-trash" data-user-api="/HomeApi/DeleteModule/" data-user-id="@module.Id" data-user-remove=".user-module" data-user-message="Delete module @Html.DisplayFor(m => module.Name)"></a>
                        </div>

                    }
                    @if (User.IsInRole(Role.Student))
                    {
                        <div>
                            (@Html.DisplayFor(m => module.StartDate) - @Html.DisplayFor(m => module.EndDate) )
                        </div>

                    }
                    

                </h5>
                <p>@module.Description</p>

               

            </div>
        }


        @if (!Model.Modules.Any())
            {
            <p>Inga moduler registrerade för denna kurs</p>
        }


    </div>
</div>
<div class="col-lg-8 col-lg-offset-1">

    <div id="UpdateContentDiv">


    </div>
</div>

<hr />

<div class="col-md-12">
    <div class="row">
        <hr />
        <h3 style="color:darkred;"><b>Course members</b></h3>



        @foreach (var student in Model.Users.ToList())
            {
            <div class="col-sm-4 col-md-4">
                <p><strong>@student.FullName</strong> <a href="@student.Email">@student.Email</a></p>
            </div>
        }
    </div>
</div>


<div class="col-md-12">
    <div class="row">
        @if (User.IsInRole(Role.Teacher))
        {
            <hr />
            @Html.ActionLink("Add new student", "Register", "Account", routeValues: new { role = Role.Student, courseid = Model.Id }, htmlAttributes: new { @class = "btn btn-default btn-sm" })
        }
        <hr />
    </div>
   
</div>
